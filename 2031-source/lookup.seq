 .PAGE 'LOOKUP-OPTSCH';OPTSCH OPTIMAL SEARCH FOR LOOKUP; AND FNDFIL .SKIP 1OPTSCH LDA #0 ; DETERMINE OPTIMAL SEARCH STA TEMP ; INIT DRIVE MASK STA DRVFLG PHA LDX F2CNTOS10 PLA ORA TEMP PHA LDA #1 STA TEMP DEX BMI OS30 LDA FILDRV,X BPL OS15 ASL TEMP ASL TEMP .SKIP 1OS15 LSR A BCC OS10 ASL TEMP BNE OS10 ; (BRANCH) .SKIP 1OS30 PLA TAX LDA SCHTBL-1,X PHA AND #3 STA DRVCNT PLA ASL A BPL OS40 LDA FILDRVOS35 AND #1 STA DRVNUM; LDA DRVCNT BEQ OS60 ; ONLY ONE DRIVE ADDRESSED; JSR AUTOI ; CHECK DRIVE FOR AUTOINIT BEQ OS50 ; DRIVE IS ACTIVE; JSR TOGDRV LDA #0 ; SET 1 DRIVE ADDRESSED STA DRVCNT JSR AUTOI ; CHECK DRIVE FOR AUTOINIT BEQ OS70 ; DRIVE IS ACTIVEOS45  LDA #NODRIV JSR CMDERROS50  JSR TOGDRV JSR AUTOI ; CHECK DRIVE FOR AUTOINIT PHP JSR TOGDRV PLP BEQ OS70 ; DRIVE IS ACTIVE; LDA #0 ; SET 1 DRIVE ADDRESSED STA DRVCNT BEQ OS70 ; BRAOS60  JSR AUTOI ; CHECK DRIVE FOR AUTOINIT BNE OS45 ; DRIVE IS NOT ACTIVEOS70  JMP SETLDS .SKIP 1OS40 ROL A JMP OS35 .SKIP 1SCHTBL .BYTE $00, $80, $41 .BYTE $01, $01, $01, $01 .BYTE $81, $81, $81, $81 .BYTE $42, $42, $42, $42 .PAGE 'LOOKUP/FNDFIL'; LOOK UP ALL FILES IN STREAM; AND FILL TABLES W/ INFO .SKIP 1LOOKUP JSR OPTSCHLK05 LDA #0 STA DELIND JSR SRCHST ; START SEARCH BNE LK25LK10 DEC DRVCNT BPL LK15 RTS ; NO MORE DRIVE SEARCHESLK15 LDA #1 ; TOGGLE DRIVE # STA DRVFLG JSR TOGDRV JSR SETLDS ; TURN ON LED JMP LK05LK20 JSR SEARCH ; FIND VALID FN BEQ LK30 ; END OF SEARCHLK25 JSR COMPAR ; COMPARE DIR W/ TABLE LDA FOUND ; FOUND FLAG BEQ LK26 ; ALL FN'S NOT FOUND, YET RTS .SKIP 1LK26 LDA ENTFND BMI LK20 BPL LK25 .SKIP 1LK30 LDA FOUND BEQ LK10 RTS .SKIP 2; FIND NEXT FILE NAME MATCHING; ANY FILE IN STREAM & RETURN; WITH ENTRY FOUND STUFFED INTO; TABLESFFRE JSR SRRE ; FIND FILE RE-ENTRY BEQ FF10 BNE FF25 .SKIP 1FF15 LDA #1 STA DRVFLG JSR TOGDRV JSR SETLDS .SKIP 1FFST LDA #0 ; FIND FILE START ENTRY STA DELIND JSR SRCHST BNE FF25 STA FOUNDFF10 LDA FOUND BNE FF40 DEC DRVCNT BPL FF15 RTS .SKIP 1FNDFIL JSR SEARCH ; FIND FILE CONTINUOUS... BEQ FF10 ; ... RE-ENTRY, NO CHANNEL ACTIVITYFF25 JSR COMPAR ; COMPARE FILE NAMES LDX ENTFND BPL FF30 LDA FOUND BEQ FNDFIL BNE FF40 .SKIP 1FF30 LDA TYPFLG BEQ FF40 ; NO TYPE RESTRICTION LDA PATTYP,X AND #TYPMSK CMP TYPFLG BNE FNDFILFF40 RTS .PAGE 'LOOKUP-COMPAR';COMPARE ALL FILENAMES IN STREAM TABLE; WITH EACH VALID ENTRY IN THE; DIRECTORY. MATCHES ARE TABULATED .SKIP 1COMPAR LDX #$FF STX ENTFND INX STX PATFLG JSR CMPCHK BEQ CP10CP02 RTS ; ALL ARE FOUND .SKIP 1CP05 JSR CC10 BNE CP02CP10 LDA DRVNUM EOR FILDRV,X LSR A BCC CP20 ; RIGHT DRIVE AND #$40 BEQ CP05 ; NO DEFAULT LDA #2 CMP DRVCNT BEQ CP05 ; DON'T USE DEFAULT .SKIP 1CP20 LDA FILTBL,X ; GOOD DRIVE MATCH TAX JSR FNDLMT LDY #3 JMP CP33CP30  LDA CMDBUF,X CMP (DIRBUF),Y BEQ CP32 ; CHARS ARE =; CMP #'? BNE CP05 ; NO SINGLE PATTERN LDA (DIRBUF),Y CMP #$A0 BEQ CP05 ; END OF FILENAMECP32  INX INYCP33  CPX LIMIT BCS CP34 ; END OF PATTERN; LDA CMDBUF,X CMP #'* BEQ CP40 ; STAR MATCHES ALL BNE CP30 ; KEEP CHECKINGCP34  CPY #19 BCS CP40 ; END OF FILENAME; LDA (DIRBUF),Y CMP #$A0 BNE CP05 .SKIP 1CP40 LDX F2PTR ; FILENAMES MATCH STX ENTFND LDA PATTYP,X ; STORE INFO IN TABLES AND #$80 STA PATFLG LDA INDEX STA ENTIND,X LDA SECTOR STA ENTSEC,X LDY #0 LDA (DIRBUF),Y INY PHA AND #$40 STA TEMP PLA AND #$FF-$20 BMI CP42; ORA #$20CP42 AND #$27 ORA TEMP STA TEMP LDA #$80 AND PATTYP,X ORA TEMP STA PATTYP,X LDA FILDRV,X AND #$80 ORA DRVNUM STA FILDRV,X; LDA (DIRBUF),Y STA FILTRK,X INY LDA (DIRBUF),Y STA FILSEC,X LDA REC BNE CP50 LDY #21 LDA (DIRBUF),Y STA RECCP50 ; JMP CMPCHK; RTS .SKIP 1;CHECK TABLE FOR UNFOUND FILES .SKIP 1CMPCHK LDA #$FF STA FOUND LDA F2CNT STA F2PTR .SKIP 1CC10 DEC F2PTR BPL CC15 RTS ; TABLE EXHAUSTED .SKIP 1CC15 LDX F2PTR LDA PATTYP,X BMI CC20 LDA FILTRK,X BNE CC10CC20 LDA #0 STA FOUND RTS .PAGE 'LOOKUP-SEARCH';SEARCH DIRECTORY; RETURNS WITH VALID ENTRY W/ DELIND=0; OR RETURNS W/ 1ST DELETED ENTRY; W/ DELIND=1;; SRCHST WILL INITIATE A SEARCH; SEARCH WILL CONTINUE A SEARCH .SKIP 1SRCHST LDY #0 ; INIT DELETED SECTOR STY DELSEC DEY STY ENTFND .SKIP 1 LDA DIRTRK ; START SEARCH AT BEGINNING STA TRACK LDA #1 STA SECTOR STA LSTBUF JSR OPNIRD ; OPEN INTERNAL READ CHNL .SKIP 1SR10 LDA LSTBUF ; LAST BUFFER IF 0 BNE SR15 RTS ; (Z=1) .SKIP 1SR15 LDA #7 STA FILCNT LDA #0 ; READ TRACK # JSR DRDBYT STA LSTBUF ; UPDATE END FLAG .SKIP 1SR20 JSR GETPNT DEC FILCNT LDY #0 LDA (DIRBUF),Y ; READ FILE TYPE BNE SR30 .SKIP 1 LDA DELSEC ; DELETED ENTRY FOUND BNE SEARCH ; DELETED ENTRY ALREADY FOUND JSR CURBLK ; GET CURRENT SECTOR LDA SECTOR STA DELSEC .SKIP 1 LDA DIRBUF ; GET CURRENT INDEX LDX DELIND ; BIT1: WANT DELETED ENTRY STA DELIND BEQ SEARCH ; NEED VALID ENTRY RTS ; (Z=0)SR30 LDX #1 CPX DELIND ; ?LOOKING FOR DELETED? BNE SR50 ; NO! BEQ SEARCH .SKIP 1SRRE LDA DIRTRK STA TRACK LDA DIRSEC STA SECTOR JSR OPNIRD LDA INDEX JSR SETPNT .SKIP 1SEARCH LDA #$FF STA ENTFND LDA FILCNT ; ADJUST FILE COUNT BMI SR40 LDA #32 ; INCR BY 32 JSR INCPTR JMP SR20 .SKIP 1SR40 JSR NXTBUF ; NEW BUFFER JMP SR10 ; (BRANCH) .SKIP 1SR50 LDA DIRBUF ; FOUND VALID ENTRY STA INDEX ; SAVE INDEX JSR CURBLK ; GET SECTOR LDA SECTOR STA DIRSEC .SKIP 1 RTS ; (Z=0)AUTOI; CHECK DRIVE FOR ACTIVE DISKETTE; INIT IF NEEDED; RETURN NODRV STATUS; LDA AUTOFG BNE AUTO2 ; AUTO-INIT IS DISABLED; LDX DRVNUM LSR WPSW,X ; TEST & CLEAR WPSW BCC AUTO2 ; NO CHANGE IN DISKETTE; LDA #$FF STA JOBRTN ; SET ERROR RETURN CODE JSR ITRIAL ; INIT-SEEK TEST LDY #$FF ; .Y= TRUE CMP #2 BEQ AUTO1 ; NO SYNC= NO DISKETTE; CMP #3 BEQ AUTO1 ; NO HEADER= NO DIRECTORY; CMP #$F BEQ AUTO1 ; NO DRIVE!!!!; LDY #0 ; SET .Y FALSEAUTO1  LDX DRVNUM TYA STA NODRV,X ; SET CONDN OF NO-DRIVE BNE AUTO2 ; NO NEED TO INIT CRUD!; JSR INITDR ; INIT THAT DRIVEAUTO2 LDX DRVNUM LDA NODRV,X RTS .SKIP 1; .END